//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2024 imliuda.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	config "github.com/imliuda/queue-scheduler/api/config"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*HierarchyQueueArgs)(nil), (*config.HierarchyQueueArgs)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_HierarchyQueueArgs_To_config_HierarchyQueueArgs(a.(*HierarchyQueueArgs), b.(*config.HierarchyQueueArgs), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*config.HierarchyQueueArgs)(nil), (*HierarchyQueueArgs)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_config_HierarchyQueueArgs_To_v1alpha1_HierarchyQueueArgs(a.(*config.HierarchyQueueArgs), b.(*HierarchyQueueArgs), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*WebHook)(nil), (*config.WebHook)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_WebHook_To_config_WebHook(a.(*WebHook), b.(*config.WebHook), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*config.WebHook)(nil), (*WebHook)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_config_WebHook_To_v1alpha1_WebHook(a.(*config.WebHook), b.(*WebHook), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_HierarchyQueueArgs_To_config_HierarchyQueueArgs(in *HierarchyQueueArgs, out *config.HierarchyQueueArgs, s conversion.Scope) error {
	if err := Convert_v1alpha1_WebHook_To_config_WebHook(&in.WebHook, &out.WebHook, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_HierarchyQueueArgs_To_config_HierarchyQueueArgs is an autogenerated conversion function.
func Convert_v1alpha1_HierarchyQueueArgs_To_config_HierarchyQueueArgs(in *HierarchyQueueArgs, out *config.HierarchyQueueArgs, s conversion.Scope) error {
	return autoConvert_v1alpha1_HierarchyQueueArgs_To_config_HierarchyQueueArgs(in, out, s)
}

func autoConvert_config_HierarchyQueueArgs_To_v1alpha1_HierarchyQueueArgs(in *config.HierarchyQueueArgs, out *HierarchyQueueArgs, s conversion.Scope) error {
	if err := Convert_config_WebHook_To_v1alpha1_WebHook(&in.WebHook, &out.WebHook, s); err != nil {
		return err
	}
	return nil
}

// Convert_config_HierarchyQueueArgs_To_v1alpha1_HierarchyQueueArgs is an autogenerated conversion function.
func Convert_config_HierarchyQueueArgs_To_v1alpha1_HierarchyQueueArgs(in *config.HierarchyQueueArgs, out *HierarchyQueueArgs, s conversion.Scope) error {
	return autoConvert_config_HierarchyQueueArgs_To_v1alpha1_HierarchyQueueArgs(in, out, s)
}

func autoConvert_v1alpha1_WebHook_To_config_WebHook(in *WebHook, out *config.WebHook, s conversion.Scope) error {
	out.Port = in.Port
	return nil
}

// Convert_v1alpha1_WebHook_To_config_WebHook is an autogenerated conversion function.
func Convert_v1alpha1_WebHook_To_config_WebHook(in *WebHook, out *config.WebHook, s conversion.Scope) error {
	return autoConvert_v1alpha1_WebHook_To_config_WebHook(in, out, s)
}

func autoConvert_config_WebHook_To_v1alpha1_WebHook(in *config.WebHook, out *WebHook, s conversion.Scope) error {
	out.Port = in.Port
	return nil
}

// Convert_config_WebHook_To_v1alpha1_WebHook is an autogenerated conversion function.
func Convert_config_WebHook_To_v1alpha1_WebHook(in *config.WebHook, out *WebHook, s conversion.Scope) error {
	return autoConvert_config_WebHook_To_v1alpha1_WebHook(in, out, s)
}
